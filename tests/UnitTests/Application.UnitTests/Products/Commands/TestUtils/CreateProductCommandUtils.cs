using Application.Products.Commands.CreateProduct;
using Domain.UnitTests.TestUtils;
using Domain.UnitTests.TestUtils.Constants;
using SharedKernel.ValueObjects;

namespace Application.UnitTests.Products.Commands.TestUtils;

/// <summary>
/// Utility class for creating instances of <see cref="CreateProductCommand"/> with customizable parameters for testing purposes.
/// Provides default values based on predefined domain constants.
/// </summary>
public static class CreateProductCommandUtils
{
    /// <summary>
    /// Creates a new instance of <see cref="CreateProductCommand"/> with optional overrides for each property.
    /// Default values are supplied from <see cref="DomainConstants"/> if no overrides are provided.
    /// </summary>
    /// <param name="name">Optional. The name of the product. Defaults to <see cref="DomainConstants.Product.Name"/>.</param>
    /// <param name="description">Optional. The description of the product. Defaults to <see cref="DomainConstants.Product.Description"/>.</param>
    /// <param name="initialQuantity">Optional. The initial quantity of the product. Defaults to <see cref="DomainConstants.Product.QuantityAvailable"/>.</param>
    /// <param name="initialPrice">Optional. The initial price of the product. Defaults to <see cref="DomainConstants.Product.Price"/>.</param>
    /// <param name="categories">Optional. The categories the product belongs to. Defaults to <see cref="DomainConstants.Product.Categories"/>.</param>
    /// <param name="images">Optional. A collection of URIs representing product images. Defaults to URLs generated by <see cref="ProductUtils.CreateProductImagesUrl"/>.</param>
    /// <param name="initialDiscounts">Optional. The discounts initially applied to the product. Not used directly in command creation.</param>
    /// <returns>A new <see cref="CreateProductCommand"/> instance with specified or default values.</returns>
    public static CreateProductCommand CreateCommand(
        string? name = null,
        string? description = null,
        int? initialQuantity = null,
        decimal? initialPrice = null,
        IEnumerable<string>? categories = null,
        IEnumerable<Uri>? images = null,
        IEnumerable<Discount>? initialDiscounts = null
    )
    {
        return new CreateProductCommand(
            name ?? DomainConstants.Product.Name,
            description ?? DomainConstants.Product.Description,
            initialQuantity ?? DomainConstants.Product.QuantityAvailable,
            initialPrice ?? DomainConstants.Product.Price,
            categories ?? DomainConstants.Product.Categories,
            images ?? ProductUtils.CreateProductImagesUrl()
        );
    }
}
