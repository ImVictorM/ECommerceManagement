using Contracts.Common;
using Contracts.Products;
using Domain.UnitTests.TestUtils;
using Domain.UnitTests.TestUtils.Constants;

namespace IntegrationTests.Products.TestUtils;

/// <summary>
/// Utility class for creating instances of <see cref="CreateProductRequest"/> with default or customized values.
/// Provides methods to simplify test setup for product creation requests by allowing specific fields to be overridden.
/// </summary>
public static class CreateProductRequestUtils
{

    /// <summary>
    /// Creates a <see cref="CreateProductRequest"/> with specified values, using defaults from <see cref="DomainConstants.Product"/>
    /// </summary>
    /// <param name="name">The name of the product. Defaults to <see cref="DomainConstants.Product.Name"/> if null.</param>
    /// <param name="description">The product description. Defaults to <see cref="DomainConstants.Product.Description"/> if null.</param>
    /// <param name="initialQuantity">The initial quantity of the product. Defaults to <see cref="DomainConstants.Product.QuantityAvailable"/> if null.</param>
    /// <param name="initialPrice">The initial price of the product. Defaults to <see cref="DomainConstants.Product.Price"/> if null.</param>
    /// <param name="categories">The categories associated with the product. Defaults to <see cref="DomainConstants.Product.Categories"/> if null.</param>
    /// <param name="images">The product images. Defaults to a list of example image URLs generated by <see cref="ProductUtils.CreateProductImagesUrl"/> if null.</param>
    /// <param name="initialDiscounts">The initial discounts for the product, if any. Defaults to null.</param>
    /// <returns>A new <see cref="CreateProductRequest"/> instance populated with either provided or default values.</returns>
    public static CreateProductRequest CreateRequest(
        string? name = null,
        string? description = null,
        int? initialQuantity = null,
        decimal? initialPrice = null,
        IEnumerable<string>? categories = null,
        IEnumerable<Uri>? images = null,
        IEnumerable<Discount>? initialDiscounts = null)
    {
        return new CreateProductRequest(
            name ?? DomainConstants.Product.Name,
            description ?? DomainConstants.Product.Description,
            initialQuantity ?? DomainConstants.Product.QuantityAvailable,
            initialPrice ?? DomainConstants.Product.Price,
            categories ?? DomainConstants.Product.Categories,
            images ?? ProductUtils.CreateProductImagesUrl(),
            initialDiscounts
        );
    }
}
